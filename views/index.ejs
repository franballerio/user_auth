<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login & registration Forms</title>
    <!-- google fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
        rel="stylesheet">
    <style>
        *,
        *::before,
        *::after {
            box-sizing: border-box;
        }

        body {
            font-family: "Roboto", sans-serif;
            background-color: #f5f5f5;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            height: 100vh;
            width: 40%;
        }

        .form-container {
            background-color: #fff;
            padding: 20px;
            margin: 10px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        form h2 {
            margin-bottom: 20px;
            font-size: 24px;
            text-align: center;
        }

        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }

        input {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        button {
            width: 100%;
            padding: 10px;
            background-color: #28a745;
            color: #fff;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        #passw-reset {
            background-color: red;
        }

        button:hover {
            background-color: #218838;
        }
    </style>
</head>

<body>
    <div class="container">
        <% if (typeof user_name !== 'undefined' ) { %>
            <div class="form-container">
                <h2>Hola <%= user_name %>!</h2>
                <p>Estas en el panel de administracion</p>
                <button id="close-session">Cerrar sesion</button>
            </div>
            <% } %>

                <% if (typeof user_name === 'undefined' ) { %>
                    <div class="form-container">
                        <form id="login-form">
                            <h2>Login</h2>
                            <label for="login-email">email or user name</label>
                            <input type="text" id="login-email" name="email" required>

                            <label for="login-password">Password</label>
                            <input type="password" id="login-password" name="password" required>

                            <button type="submit">Login</button>
                            <span>&nbsp;</span>
                        </form>
                        <button id="passw-reset">Forgot your credentials?</button>
                    </div>

                    <div class="form-container">
                        <form id="register-form">
                            <h2>Register</h2>
                            <label for="register-email">email</label>
                            <input type="text" id="register-email" name="email" required>

                            <label for="register-username">user name</label>
                            <input type="text" id="register-username" name="username" required>                            

                            <label for="register-password">Password</label>
                            <input type="password" id="register-password" name="password" required>

                            <label for="register-confirm-password">Confirm Password</label>
                            <input type="password" id="register-confirm-password" name="confirm-password" required>
                            <span>&nbsp;</span>
                            <button type="submit">Register</button>
                        </form>
                    </div>
                    <% } %>
    </div>
    <script>
        const $ = el => document.querySelector(el)

        const loginForm = $('#login-form')
        const loginSpan = $('#login-form span')

        const registerForm = $('#register-form')
        const registerSpan = $('#register-form span')

        const logoutButton = $('#close-session')

        loginForm?.addEventListener('submit', e => {
            e.preventDefault()
            const userORemail = $('#login-email').value
            const password = $('#login-password').value

            fetch('/users/login', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ credential: userORemail, password })
            })
                .then(async res => {
                    if (res.ok) {
                        loginSpan.innerText = 'Sesion Iniciada... Entrando...'
                        loginSpan.style.color = 'green'
                        setTimeout(() => {
                            window.location.href = '/home/protected'
                        }, 1200)
                    } else {
                        const errData = await res.json()
                        loginSpan.innerText = errData.message || 'Error al iniciar sesion'
                        loginSpan.style.color = 'red'
                    }
                })
                .catch(error => {
                    loginSpan.innerText = 'Network error occurred'
                    loginSpan.style.color = 'red'
                })
        })

        registerForm?.addEventListener('submit', e => {
            e.preventDefault()
            const email = $('#register-email').value
            const user_name = $('#register-username').value
            const password = $('#register-password').value
            const confirmPassword = $('#register-confirm-password').value
            
            if (password !== confirmPassword) {
                registerSpan.innerText = 'Passwords do not match'
                registerSpan.style.color = 'red'
                return
            }

            fetch('/users/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, user_name, password })
            })
                .then(async (res) => {
                    console.log(res)
                    if (res.ok) {
                        registerSpan.innerText = 'User Registered. Logging in...'
                        registerSpan.style.color = 'green'
                        setTimeout(async () => {
                            try {
                                const loginRes = await fetch('/users/login', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ credential: email, password })
                                })
                                
                                if (loginRes.ok) {
                                    window.location.href = '/home/protected'
                                } else {
                                    const loginErr = await loginRes.json()
                                    registerSpan.innerText = loginErr.message || 'Registration successful, please login manually'
                                    registerSpan.style.color = 'orange'
                                }
                            } catch (error) {
                                registerSpan.innerText = 'Registration successful, please login manually'
                                registerSpan.style.color = 'orange'
                            }
                        }, 1000)
                    } else {
                        const errData = await res.json()
                        registerSpan.innerText = errData.message || 'Registration failed'
                        registerSpan.style.color = 'red'
                    }
                })
                .catch(error => {
                    registerSpan.innerText = 'Network error occurred'
                    registerSpan.style.color = 'red'
                })
        })

        logoutButton?.addEventListener('click', e => {
            e.preventDefault()
            fetch('/users/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(res => {
                    console.log(res)
                    window.location.href = ('/home')
                })
        })

        const reset = $('#passw-reset')    
        
        reset?.addEventListener('click', e => {
            window.location.href = ('/home/reset')
        })

        </script>
</body>

</html>